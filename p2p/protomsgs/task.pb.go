// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package protomsgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RunImageMsgData struct {
	MessageData          *MessageData `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RunImageMsgData) Reset()         { *m = RunImageMsgData{} }
func (m *RunImageMsgData) String() string { return proto.CompactTextString(m) }
func (*RunImageMsgData) ProtoMessage()    {}
func (*RunImageMsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_041d40b8f09557a3, []int{0}
}
func (m *RunImageMsgData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunImageMsgData.Unmarshal(m, b)
}
func (m *RunImageMsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunImageMsgData.Marshal(b, m, deterministic)
}
func (dst *RunImageMsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunImageMsgData.Merge(dst, src)
}
func (m *RunImageMsgData) XXX_Size() int {
	return xxx_messageInfo_RunImageMsgData.Size(m)
}
func (m *RunImageMsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_RunImageMsgData.DiscardUnknown(m)
}

var xxx_messageInfo_RunImageMsgData proto.InternalMessageInfo

func (m *RunImageMsgData) GetMessageData() *MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

// a protocol define a set of reuqest and responses
type RunRequest struct {
	RunImageMsgData      *RunImageMsgData `protobuf:"bytes,1,opt,name=RunImageMsgData,proto3" json:"RunImageMsgData,omitempty"`
	ImageID              string           `protobuf:"bytes,2,opt,name=imageID,proto3" json:"imageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_041d40b8f09557a3, []int{1}
}
func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (dst *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(dst, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetRunImageMsgData() *RunImageMsgData {
	if m != nil {
		return m.RunImageMsgData
	}
	return nil
}

func (m *RunRequest) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

type RunResponse struct {
	RunImageMsgData      *RunImageMsgData `protobuf:"bytes,1,opt,name=RunImageMsgData,proto3" json:"RunImageMsgData,omitempty"`
	ContainerID          string           `protobuf:"bytes,2,opt,name=containerID,proto3" json:"containerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RunResponse) Reset()         { *m = RunResponse{} }
func (m *RunResponse) String() string { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()    {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_041d40b8f09557a3, []int{2}
}
func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse.Unmarshal(m, b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
}
func (dst *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(dst, src)
}
func (m *RunResponse) XXX_Size() int {
	return xxx_messageInfo_RunResponse.Size(m)
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

func (m *RunResponse) GetRunImageMsgData() *RunImageMsgData {
	if m != nil {
		return m.RunImageMsgData
	}
	return nil
}

func (m *RunResponse) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func init() {
	proto.RegisterType((*RunImageMsgData)(nil), "protomsgs.RunImageMsgData")
	proto.RegisterType((*RunRequest)(nil), "protomsgs.RunRequest")
	proto.RegisterType((*RunResponse)(nil), "protomsgs.RunResponse")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_task_041d40b8f09557a3) }

var fileDescriptor_task_041d40b8f09557a3 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2c, 0xce,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x53, 0xb9, 0xc5, 0xe9, 0xc5, 0x52, 0x3c,
	0xc9, 0xf9, 0xb9, 0xb9, 0xf9, 0x79, 0x10, 0x09, 0x25, 0x6f, 0x2e, 0xfe, 0xa0, 0xd2, 0x3c, 0xcf,
	0xdc, 0xc4, 0xf4, 0x54, 0xdf, 0xe2, 0x74, 0x97, 0xc4, 0x92, 0x44, 0x21, 0x0b, 0x2e, 0xee, 0xdc,
	0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x10, 0x57, 0x82, 0x51, 0x81, 0x51, 0x83, 0xdb, 0x48, 0x4c,
	0x0f, 0x6e, 0x82, 0x9e, 0x2f, 0x42, 0x36, 0x08, 0x59, 0xa9, 0x52, 0x0e, 0x17, 0x57, 0x50, 0x69,
	0x5e, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x0b, 0x86, 0xd1, 0x50, 0xb3, 0xa4, 0x90,
	0xcc, 0x42, 0x53, 0x11, 0x84, 0xe1, 0x1a, 0x09, 0x2e, 0xf6, 0x4c, 0x10, 0xdf, 0xd3, 0x45, 0x82,
	0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc6, 0x55, 0x2a, 0xe5, 0xe2, 0x06, 0xdb, 0x56, 0x5c, 0x90,
	0x9f, 0x57, 0x9c, 0x4a, 0x25, 0xeb, 0x14, 0xb8, 0xb8, 0x93, 0xf3, 0xf3, 0x4a, 0x12, 0x33, 0xf3,
	0x52, 0x8b, 0xe0, 0x56, 0x22, 0x0b, 0x25, 0xb1, 0x81, 0x4d, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x78, 0xd3, 0x3a, 0xbe, 0x5f, 0x01, 0x00, 0x00,
}
